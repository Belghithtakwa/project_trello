{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/app/user/sign-in/sign-in.component.css","webpack:///./src/app/user/sign-in/sign-in.component.html","webpack:///./src/app/user/sign-in/sign-in.component.ts","webpack:///./src/app/user/sign-up/sign-up.component.css","webpack:///./src/app/user/sign-up/sign-up.component.html","webpack:///./src/app/user/sign-up/sign-up.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPzB,WAAW;AAC+C;AACjB;AACI;AACE;AAC2B;AAC1E,aAAa;AACkC;AACO;AACa;AACnE,QAAQ;AAC6B;AACwC;AACV;AACf;AACpD,OAAO;AACuC;AACY;AAuB1D;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,+EAAe;gBACf,yFAAoB;gBACpB,gFAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,4DAAY,CAAC,OAAO,CAAC,iDAAS,CAAC;gBAC/B,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC;oBACV,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,uEAAe;oBACzB,KAAK,EAAE,IAAI;iBACZ,EAAC,2DAAS,EAAC,iEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCqB;AAGU;AACZ;AAKzC;IAEE,mBAAoB,WAAyB,EAAS,MAAe;QAAjD,gBAAW,GAAX,WAAW,CAAc;QAAS,WAAM,GAAN,MAAM,CAAS;IAAE,CAAC;IAExE,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QACxB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAbU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGkC,gEAAW,EAAkB,sDAAM;OAF1D,SAAS,CAcrB;IAAD,gBAAC;CAAA;AAdqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRqB;AACN;AACI;AAEY;AAGrD;IAEI,yBAAoB,WAAyB,EAAS,MAAe;QAAjD,gBAAW,GAAX,WAAW,CAAc;QAAS,WAAM,GAAN,MAAM,CAAS;IAAE,CAAC;IAExE,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBAkBC;QAhBG,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,CAAC;YACF,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;gBACxB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;aACrF,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAC9B,0DAAG,CACC,eAAK,IAAM,CAAC,EACZ,aAAG;gBACC,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC;YACL,CAAC,CAAC,CACT,CAAC;QACN,CAAC;IACL,CAAC;IAtBQ,eAAe;QAD3B,gEAAU,EAAE;yCAGyB,gEAAW,EAAkB,sDAAM;OAF5D,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;;;;;;;;;;;;ACP0B;AACa;AACA;AACU;AAC/B;AAEvC,IAAM,SAAS,GAAW;IAC7B;QACI,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,kEAAa;QACxC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+EAAe,EAAE,CAAC;KACvD;IACD;QACI,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,kEAAa;QACvC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+EAAe,EAAE,CAAC;KACvD;IACD;QACI,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,yFAAoB,EAAC,WAAW,EAAC,CAAC,0DAAS,CAAC;KAC/E;IACD;QACI,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM;KACpD;CACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtByC;AACoB;AAEF;AAM7D;IASE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,iBAAY,GAAS;YACnB,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,iBAAY,GAAG,EAAE,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;IAE1B,CAAC;IAEzC,aAAa;IAEb,8BAAQ,GAAR,UAAS,IAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,UAAU,GAAC,WAAW,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnF,CAAC;IAED,2BAAK,GAAL,UAAM,eAAe;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,UAAU,GAAG,eAAe,EAAE,eAAe,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrG,CAAC;IAED,oCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC;IAChE,CAAC;IAGD,gBAAgB;IAEhB,8BAAQ,GAAR,UAAS,KAAa;QACpB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,8BAAQ,GAAR;QACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,iCAAW,GAAX;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,oCAAc,GAAd;QACE,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QACD,IAAI;YACF,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACxC,EAAE,CAAC,CAAC,WAAW,CAAC;YACd,MAAM,CAAC,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QAC7C,IAAI;YACF,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAxDU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAU0B,+DAAU;OATzB,WAAW,CAyDvB;IAAD,kBAAC;CAAA;AAzDuB;;;;;;;;;;;;ACTxB,mB;;;;;;;;;;;ACAA,mRAAmR,oCAAoC,gP;;;;;;;;;;;;;;;;;;;;;;;;;;ACArQ;AACG;AACZ;AAOzC;IAEE,8BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEzE,uCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CACzC,aAAG;YACD,KAAI,CAAC,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEnB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAnBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAGiC,gEAAW,EAAkB,sDAAM;OAFzD,oBAAoB,CAqBhC;IAAD,2BAAC;CAAA;AArBgC;;;;;;;;;;;;ACTjC,mB;;;;;;;;;;;ACAA,uXAAuX,yDAAyD,kVAAkV,4DAA4D,iUAAiU,qBAAqB,a;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlmC;AAET;AAEe;AAOxD;IAEE,yBAAoB,WAAwB,EAAS,MAAe;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAS;QAEpE,UAAK,GAAE;YACL,KAAK,EAAE,EAAE;YACT,QAAQ,EAAC,EAAE;SACZ,CAAC;QACF,eAAU,GAAG,yJAAyJ,CAAC;IAN/F,CAAC;IAQzE,kCAAQ,GAAR;QACE,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAa;QAAtB,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC1C,aAAG;YACD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACxC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QAC5C,CAAC,EACD,aAAG;YACD,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;IAzBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAGiC,gEAAW,EAAkB,sDAAM;OAFzD,eAAe,CA2B3B;IAAD,sBAAC;CAAA;AA3B2B;;;;;;;;;;;;ACX5B,mB;;;;;;;;;;;ACAA,8WAA8W,4DAA4D,8UAA8U,yDAAyD,0dAA0d,4DAA4D,6jBAA6jB,qBAAqB,W;;;;;;;;;;;;;;;;;;;;;;;;;ACAv2D;AAGK;AAOvD;IAKE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,eAAU,GAAG,yJAAyJ,CAAC;IAIvH,CAAC;IAEjD,kCAAQ,GAAR;IACA,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAeC;QAdC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7C,aAAG;YACD,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,UAAU,CAAC,cAAM,YAAI,CAAC,iBAAiB,GAAG,KAAK,EAA9B,CAA8B,EAAE,IAAI,CAAC,CAAC;YACvD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EACD,aAAG;YACD,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrD,CAAC;YACD,IAAI;gBACF,KAAI,CAAC,mBAAmB,GAAG,4CAA4C,CAAC;QAC5E,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mCAAS,GAAT,UAAU,IAAY;QACpB,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG;YAC9B,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;IAnCU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAMiC,gEAAW;OALjC,eAAe,CAqC3B;IAAD,sBAAC;CAAA;AArC2B;;;;;;;;;;;;ACV5B,mB;;;;;;;;;;;ACAA,mV;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;;;ACP1B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,2BAA2B;CACxC,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","// built-in\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// components\r\nimport { AppComponent } from './app.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\n//routes\r\nimport { appRoutes } from './routes';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { UserService } from './shared/user.service';\r\n//other\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    SignUpComponent,\r\n    UserProfileComponent,\r\n    SignInComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpClientModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  },AuthGuard,UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from \"../shared/user.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private userService : UserService,private router : Router){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n      if (!this.userService.isLoggedIn()) {\r\n        this.router.navigateByUrl('/login');\r\n        this.userService.deleteToken();\r\n        return false;\r\n      }\r\n    return true;\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { UserService } from \"../shared/user.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService : UserService,private router : Router){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n        if (req.headers.get('noauth'))\r\n            return next.handle(req.clone());\r\n        else {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + this.userService.getToken())\r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(\r\n                    event => { },\r\n                    err => {\r\n                        if (err.error.auth == false) {\r\n                            this.router.navigateByUrl('/login');\r\n                        }\r\n                    })\r\n            );\r\n        }\r\n    }\r\n}","import { Routes } from '@angular/router';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nexport const appRoutes: Routes = [\r\n    {\r\n        path: 'signup', component: UserComponent,\r\n        children: [{ path: '', component: SignUpComponent }]\r\n    },\r\n    {\r\n        path: 'login', component: UserComponent,\r\n        children: [{ path: '', component: SignInComponent }]\r\n    },\r\n    {\r\n        path: 'userprofile', component: UserProfileComponent,canActivate:[AuthGuard]\r\n    },\r\n    {\r\n        path: '', redirectTo: '/login', pathMatch: 'full'\r\n    }\r\n];","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  selectedUser: User = {\r\n    fullName: '',\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  noAuthHeader = { headers: new HttpHeaders({ 'NoAuth': 'True' }) };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //HttpMethods\r\n\r\n  postUser(user: User){\r\n    return this.http.post(environment.apiBaseUrl+'/register',user,this.noAuthHeader);\r\n  }\r\n\r\n  login(authCredentials) {\r\n    return this.http.post(environment.apiBaseUrl + '/authenticate', authCredentials,this.noAuthHeader);\r\n  }\r\n\r\n  getUserProfile() {\r\n    return this.http.get(environment.apiBaseUrl + '/userProfile');\r\n  }\r\n\r\n\r\n  //Helper Methods\r\n\r\n  setToken(token: string) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  getUserPayload() {\r\n    var token = this.getToken();\r\n    if (token) {\r\n      var userPayload = atob(token.split('.')[1]);\r\n      return JSON.parse(userPayload);\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n\r\n  isLoggedIn() {\r\n    var userPayload = this.getUserPayload();\r\n    if (userPayload)\r\n      return userPayload.exp > Date.now() / 1000;\r\n    else\r\n      return false;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<table *ngIf=\\\"userDetails\\\" class=\\\"table-fill\\\">\\r\\n  <thead>\\r\\n      <tr>\\r\\n          <th colspan=\\\"2\\\" class=\\\"text-center\\\">User Profile</th>\\r\\n      </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n      <tr>\\r\\n          <td>First Name</td>\\r\\n          <td>{{userDetails.fullName.split(' ')[0]}}</td>\\r\\n      </tr>\\r\\n\\r\\n      <tr>\\r\\n          <td colspan=\\\"2\\\" class=\\\"text-center\\\">\\r\\n              <input type=\\\"button\\\" (click)=\\\"onLogout()\\\" value=\\\"Logout\\\" />\\r\\n          </td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n  userDetails;\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUserProfile().subscribe(\r\n      res => {\r\n        this.userDetails = res['user'];\r\n      },\r\n      err => { \r\n        console.log(err);\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n  onLogout(){\r\n    this.userService.deleteToken();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n    <img src=\\\"assets/img/single_user.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" />\\r\\n  </div>\\r\\n  <form #signInForm=\\\"ngForm\\\" (ngSubmit)=\\\"signInForm.valid && onSubmit(signInForm)\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" placeholder=\\\"Email\\\" [pattern]=\\\"emailRegex\\\" required\\r\\n      [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !email.valid }\\\">\\r\\n    <div *ngIf=\\\"signInForm.submitted && email.errors?.pattern\\\">\\r\\n      <label class=\\\"validation-message\\\">Invalid email address.</label>\\r\\n    </div>\\r\\n    <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\" required minlength=\\\"4\\\"\\r\\n      [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !password.valid }\\\">\\r\\n    <div *ngIf=\\\"signInForm.submitted && password.errors?.minlength\\\">\\r\\n      <label class=\\\"validation-message\\\">Minimum 4 characters.</label>\\r\\n    </div>\\r\\n    <input type=\\\"submit\\\" value=\\\"Sign In\\\">\\r\\n  </form>\\r\\n  <!-- Error message -->\\r\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n    {{serverErrorMessages}}\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { UserService } from '../../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService,private router : Router) { }\r\n\r\n  model ={\r\n    email :'',\r\n    password:''\r\n  };\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  serverErrorMessages: string;\r\n  ngOnInit() {\r\n    if(this.userService.isLoggedIn())\r\n    this.router.navigateByUrl('/userprofile');\r\n  }\r\n\r\n  onSubmit(form : NgForm){\r\n    this.userService.login(form.value).subscribe(\r\n      res => {\r\n        this.userService.setToken(res['token']);\r\n        this.router.navigateByUrl('/userprofile');\r\n      },\r\n      err => {\r\n        this.serverErrorMessages = err.error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <img src=\\\"/assets/img/users.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" />\\r\\n</div>\\r\\n<form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\r\\n  <input type=\\\"text\\\" #fullName=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.fullName\\\" name=\\\"fullName\\\" placeholder=\\\"Full Name\\\"\\r\\n  required  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !fullName.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && !fullName.valid\\\">\\r\\n    <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n  </div>\\r\\n  <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\"\\r\\n  required [pattern]=\\\"emailRegex\\\"  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && email.errors\\\">\\r\\n    <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\r\\n    <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\r\\n  </div>\\r\\n  <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n  minlength=\\\"4\\\" required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && password.errors\\\">\\r\\n    <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\r\\n    <label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Enter atleast 4 characters.</label>\\r\\n  </div>\\r\\n  <input type=\\\"submit\\\" value=\\\"Sign Up\\\">\\r\\n</form>\\r\\n\\r\\n<!-- Success message -->\\r\\n<div class=\\\"success\\\" *ngIf=\\\"showSucessMessage\\\">\\r\\n  Saved successfully\\r\\n</div>\\r\\n\\r\\n<!-- Error message -->\\r\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n  {{serverErrorMessages}}\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { UserService } from '../../shared/user.service'\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  showSucessMessage: boolean;\r\n  serverErrorMessages: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.userService.postUser(form.value).subscribe(\r\n      res => {\r\n        this.showSucessMessage = true;\r\n        setTimeout(() => this.showSucessMessage = false, 4000);\r\n        this.resetForm(form);\r\n      },\r\n      err => {\r\n        if (err.status === 422) {\r\n          this.serverErrorMessages = err.error.join('<br/>');\r\n        }\r\n        else\r\n          this.serverErrorMessages = 'Something went wrong.Please contact admin.';\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm(form: NgForm) {\r\n    this.userService.selectedUser = {\r\n      fullName: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n    form.resetForm();\r\n    this.serverErrorMessages = '';\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div id=\\\"formContent\\\">\\r\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/login\\\"  routerLinkActive=\\\"active\\\"> Sign In </h2>\\r\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/signup\\\"  routerLinkActive=\\\"active\\\">Sign Up </h2>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}